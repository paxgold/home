pkgbase=gtk4+clang
pkgname=(gtk4+clang)
pkgver=4.10.0
pkgrel=1
epoch=1
pkgdesc="GObject-based multi-platform GUI toolkit"
arch=(x86_64)
url="https://www.gtk.org/"
license=(LGPL)
depends=(glib2 cairo pango harfbuzz gdk-pixbuf2
  libepoxy libgl libegl libxkbcommon graphene iso-codes
  wayland fontconfig
  librsvg dconf shared-mime-info desktop-file-utils
  adwaita-icon-theme cantarell-fonts libxinerama)
makedepends=(git meson shaderc sassc
  wayland-protocols python-gobject)
_commit=47aa0dcc7f1a895d19d7ded7eb5eb429141c432e # tags/4.10.0
source=(
  "git+https://gitlab.gnome.org/GNOME/gtk.git#commit=${_commit}"
  gtk-update-icon-cache.{hook,script} gtk4-querymodules.hook
)
sha256sums=('SKIP'
            '2d435e3bec8b79b533f00f6d04decb1d7c299c6e89b5b175f20be0459f003fe8'
            'f1d3a0dbfd82f7339301abecdbe5f024337919b48bd0e09296bb0e79863b2541'
            'cd8e607eddd9941f279084e1d15309941423d26cca1897f43524a02e58e48816')

_extra_lto_flag=""

prepare() {

  if clang --version 2>/dev/null | grep -iq "clang\s*version\s*[0-9]" && ld.lld --version 2>/dev/null | grep -iq "LLD\s*[0-9]"; then
    _extra_lto_flag='-D b_lto_mode=thin'
  fi

  cd "${srcdir:?}/gtk" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/gtk directory! Prepare Failed! \E[0m"
    exit 1
  )

}

pkgver() {

  cd "${srcdir:?}/gtk" || (
    echo -e "\E[1;31mCan't cd to ${srcdir:?}/gtk directory! PkgVer Failed! \E[0m"
    exit 1
  )

  git describe --tags | sed 's/[^-]*-g/r&/;s/-/+/g'

}

build() {

  CFLAGS+=" -DG_DISABLE_CAST_CHECKS -Wno-macro-redefined"
  OBJCOPY=objcopy meson setup gtk build \
    --prefix /usr \
    --libexecdir lib \
    --sbindir bin \
    --auto-features enabled \
    --wrap-mode nodownload \
    -D debug=false \
    -D optimization=3 \
    -D b_ndebug=true \
    -D b_lto=true ${_extra_lto_flag} \
    -D b_pie=true \
    -D broadway-backend=false \
    -D cloudproviders=disabled \
    -D wayland-backend=true \
    -D tracker=disabled \
    -D colord=disabled \
    -D x11-backend=false \
    -D win32-backend=false \
    -D macos-backend=false \
    -D media-ffmpeg=disabled \
    -D media-gstreamer=disabled \
    -D print-cups=disabled \
    -D f16c=disabled \
    -D introspection=disabled \
    -D demos=false \
    -D gtk_doc=false \
    -D build-testsuite=false \
    -D build-tests=false \
    -D build-examples=false \
    -D vulkan=disabled \
    -D man-pages=false

  meson compile -C build

}

_pick() {

  local p="$1" f d
  shift
  for f; do
    d="${srcdir:?}/$p/${f#${pkgdir:?}/}"
    mkdir -p "$(dirname "$d")"
    mv "$f" "$d"
    rmdir -p --ignore-fail-on-non-empty "$(dirname "$f")"
  done

}

package_gtk4+clang() {

  depends+=(gtk-update-icon-cache)
  provides=(gtk4 "gtk4=${pkgver}" libgtk-4.so)
  conflicts=(gtk4)

  meson install -C build --destdir "${pkgdir:?}"

  install -Dm644 /dev/stdin "${pkgdir:?}/usr/share/gtk-4.0/settings.ini" <<END
[Settings]
gtk-icon-theme-name = Adwaita
gtk-theme-name = Adwaita
gtk-font-name = Cantarell 11
END

  install -Dt "${pkgdir:?}/usr/share/libalpm/hooks" -m644 gtk4-querymodules.hook

  cd "${pkgdir:?}" || (
    echo -e "\E[1;31mCan't cd to ${pkgdir} directory! Package Failed! \E[0m"
    exit 1
  )

  _pick guic usr/bin/gtk4-update-icon-cache


}
